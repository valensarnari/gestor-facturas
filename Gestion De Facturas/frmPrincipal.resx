<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>